/*
 * Copyright (C) 2018 Knot.x Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
  id "io.spring.dependency-management" version "1.0.5.RELEASE" apply false
}

allprojects {
  repositories {
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://oss.sonatype.org/content/groups/staging/" }
  }
}

defaultTasks = ['build']

subprojects {
  group = 'io.knotx.databridge'

  apply plugin: 'java'
  apply plugin: 'eclipse'
  apply plugin: 'idea'
  apply plugin: 'maven'
  apply plugin: 'io.spring.dependency-management'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:deprecation'
    options.incremental = true
  }

  dependencyManagement {
    imports {
      mavenBom 'io.knotx:knotx-dependencies:1.3.1-SNAPSHOT'
    }
  }

  dependencies {
    compile "io.knotx:knotx-core"

    compile "io.vertx:vertx-core"
    compile "io.vertx:vertx-service-proxy"
    compile "io.vertx:vertx-rx-java2"

    compileOnly "io.vertx:vertx-codegen"

    // Test dependencies
    testCompile 'junit:junit'
    testCompile 'com.googlecode.zohhak:zohhak'
    testCompile 'uk.co.datumedge:hamcrest-json'
    testCompile 'org.hamcrest:hamcrest-all'
    testCompile 'org.powermock:powermock-api-mockito'
    testCompile 'org.powermock:powermock-module-junit4'
    testCompile "com.github.tomakehurst:wiremock:2.17.0"

    testCompileOnly "io.vertx:vertx-codegen"
    testCompile "io.vertx:vertx-config"
    testCompile 'io.vertx:vertx-unit'
    testCompile "io.knotx:knotx-mocks"
    testCompile group: 'io.knotx', name: 'knotx-core', classifier: 'tests'
  }

  sourceSets {
    main {
      java {
        srcDirs += 'src/main/generated'
      }
    }
    test {
      resources {
        srcDirs += 'src/test/resources'
      }
    }
  }

  task annotationProcessing(type: JavaCompile, group: 'build') { // codegen
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.compileOnly
    destinationDir = project.file('src/main/generated')
    options.compilerArgs = [
        "-proc:only",
        "-processor", "io.vertx.codegen.CodeGenProcessor",
        "-Acodegen.output=${destinationDir.absolutePath}"
    ]
  }

  test {
    systemProperties = [
        'vertx.logger-delegate-factory-class-name': 'io.vertx.core.logging.SLF4JLogDelegateFactory'
    ]
  }

}
